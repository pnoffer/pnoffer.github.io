function BannerAnim() { var e = $(".outer-ring"), t = $(".link-concerns").find("img"); TweenMax.to(e, 150, { rotation: "360", ease: Linear.easeNone, repeat: -1 }), TweenMax.to(t, 150, { rotation: "-360", ease: Linear.easeNone, repeat: -1 }); $(".video-wrap").append('<video autoplay loop muted><source src="Content/videos/banner-video.mp4" type="video/mp4"></video>'), setTimeout(function () { $(".video-wrap").find("video").fadeIn("slow") }, 100), $(".anim-sec").removeClass("start"); var a = new TimelineMax({ paused: !0 }), i = new TimelineMax({ paused: !0, onComplete: function () { setTimeout(function () { $(".outer-ring").addClass("active"), $(".inner-ring").addClass("active") }, 500) } }), s = new TimelineMax({ paused: !0 }), n = new TimelineMax({ paused: !0 }); a.from(".outer-ring .link-concerns", .5, {}, 1), i.from(".outer-ring .link-concerns", .5, {}, 4), s.from(".inner-ring .items", .5, {}, 1), n.from(".inner-ring .items", .5, {}, 4), a.staggerTo(".outer-ring .link-concerns", .5, { className: "+=active" }, 3), i.staggerTo(".outer-ring .link-concerns", .5, { className: "-=active" }, 3), s.staggerTo(".inner-ring .items", .5, { className: "+=active" }, 3), n.staggerTo(".inner-ring .items", .5, { className: "-=active" }, 3), a.play(), i.play(), s.play(), n.play(), $(document).on("mouseenter", ".link-concerns", function (e) { e.stopImmediatePropagation(); var t = $(this).data("option"); $("." + t).css({ opacity: "1" }), $(".link-concerns").removeClass("active"), $(".inner-ring .items").removeClass("active"), $(".video-wrap").addClass("dark"), $(".video-wrap").find("video").get(0).pause(), a.pause(), i.pause(), s.pause(), n.pause() }).on("mouseleave", ".link-concerns", function () { var e = $(this).data("option"); $("." + e).attr("style", ""), $(".video-wrap").removeClass("dark"), $(".video-wrap").find("video").get(0).play(), a.resume(), i.resume(), s.resume(), n.resume() }); var o = new TimelineMax({ paused: !0 }); o.to($("body"), .5, { overflow: "hidden" }).to($(".menuanim-1"), .5, { right: 0, ease: Power3.easeOut }, .1).to($(".menuanim-2"), .5, { right: 0, ease: Power3.easeOut }, .3).to($(".hdr-home"), .5, { right: 0, ease: Power3.easeOut }, .5), $(".home-hdr-toggle").click(function () { o.play() }), $(".hdr-home").find(".close-btn").click(function () { o.reverse() }); var l = $(".banner").height(); $(window).scroll(function () { $(this).scrollTop() > l ? $("header").removeClass("home-page") : ($("header").addClass("home-page"), $(window).width() < 991 && ($("header").find(".mnu").removeClass("opn"), $("header").find(".menu-wrap").slideUp())) }) } function hyperMarketAnim() { function e() { var e = new TimelineMax({ paused: !0, onComplete: t }); e.to($hyperringAnimItem, 1.5, { rotation: "360", ease: Elastic.easeOut.config(1, .3) }, 1).to($hyperringAnimItem, 1.5, { rotation: "315", ease: Elastic.easeOut.config(1, .3) }, 2).to($hyperringAnimItem, 1.5, { rotation: "270", ease: Elastic.easeOut.config(1, .3) }, 3).to($hyperringAnimItem, 1.5, { rotation: "225", ease: Elastic.easeOut.config(1, .3) }, 4).to($hyperringAnimItem, 1.5, { rotation: "180", ease: Elastic.easeOut.config(1, .3) }, 5).to($hyperringAnimItem, 1.5, { rotation: "135", ease: Elastic.easeOut.config(1, .3) }, 6).to($hyperringAnimItem, 1.5, { rotation: "90", ease: Elastic.easeOut.config(1, .3) }, 7).to($hyperringAnimItem, 1.5, { rotation: "45", ease: Elastic.easeOut.config(1, .3) }, 8).to($hyperringAnimItem, 1.5, { rotation: "0", ease: Elastic.easeOut.config(1, .3) }, 9), e.play() } function t() { var t = new TimelineMax({ paused: !0, onComplete: e }); t.to($hyperringAnimItem, 1.5, { rotation: "0", ease: Elastic.easeOut.config(1, .3) }).to($hyperringAnimItem, 1.5, { rotation: "45", ease: Elastic.easeOut.config(1, .3) }, 1).to($hyperringAnimItem, 1.5, { rotation: "90", ease: Elastic.easeOut.config(1, .3) }, 2).to($hyperringAnimItem, 1.5, { rotation: "135", ease: Elastic.easeOut.config(1, .3) }, 3).to($hyperringAnimItem, 1.5, { rotation: "180", ease: Elastic.easeOut.config(1, .3) }, 4).to($hyperringAnimItem, 1.5, { rotation: "225", ease: Elastic.easeOut.config(1, .3) }, 5).to($hyperringAnimItem, 1.5, { rotation: "270", ease: Elastic.easeOut.config(1, .3) }, 6).to($hyperringAnimItem, 1.5, { rotation: "315", ease: Elastic.easeOut.config(1, .3) }, 7).to($hyperringAnimItem, 1.5, { rotation: "360", ease: Elastic.easeOut.config(1, .3) }, 8), t.play() } $hyperringAnimItem = $(".hypermarket-sec1").find(".ring"); var a = new TimelineMax({ paused: !0, onComplete: e }); a.to($hyperringAnimItem, 1.5, { rotation: "0", ease: Elastic.easeOut.config(1, .3) }).to($hyperringAnimItem, 1.5, { rotation: "45", ease: Elastic.easeOut.config(1, .3) }, 1).to($hyperringAnimItem, 1.5, { rotation: "90", ease: Elastic.easeOut.config(1, .3) }, 2).to($hyperringAnimItem, 1.5, { rotation: "135", ease: Elastic.easeOut.config(1, .3) }, 3).to($hyperringAnimItem, 1.5, { rotation: "180", ease: Elastic.easeOut.config(1, .3) }, 4).to($hyperringAnimItem, 1.5, { rotation: "225", ease: Elastic.easeOut.config(1, .3) }, 5).to($hyperringAnimItem, 1.5, { rotation: "270", ease: Elastic.easeOut.config(1, .3) }, 6).to($hyperringAnimItem, 1.5, { rotation: "315", ease: Elastic.easeOut.config(1, .3) }, 7).to($hyperringAnimItem, 1.5, { rotation: "360", ease: Elastic.easeOut.config(1, .3) }, 8), a.play(), TweenMax.staggerTo(".hyper-items img", .5, { opacity: 1, ease: Back.easeIn }, 1) } function dealAnim() { var e = $(".deal-anim-sec").find(".imgrotate"); TweenMax.to(e, 50, { rotation: "360", ease: Linear.easeNone, repeat: -1 }); var t = $(".limited-offer-wrap").find(".offer-img"); TweenMax.to(t, 1, { bottom: "-10", ease: Elastic.easeOut.config(1, .5), repeat: -1, yoyo: !0 }) } function storeMap(e, t, a) { var i = { lat: e, lng: t }, s = new google.maps.Map(document.getElementById("map"), { zoom: 13, center: i, disableDefaultUI: !0, styles: [{ featureType: "all", elementType: "geometry.fill", stylers: [{ weight: "2.00" }] }, { featureType: "all", elementType: "geometry.stroke", stylers: [{ color: "#9c9c9c" }] }, { featureType: "all", elementType: "labels.text", stylers: [{ visibility: "on" }] }, { featureType: "landscape", elementType: "all", stylers: [{ color: "#f2f2f2" }] }, { featureType: "landscape", elementType: "geometry.fill", stylers: [{ color: "#ffffff" }] }, { featureType: "landscape.man_made", elementType: "geometry.fill", stylers: [{ color: "#ffffff" }] }, { featureType: "poi", elementType: "all", stylers: [{ visibility: "off" }] }, { featureType: "road", elementType: "all", stylers: [{ saturation: -100 }, { lightness: 45 }] }, { featureType: "road", elementType: "geometry.fill", stylers: [{ color: "#eeeeee" }] }, { featureType: "road", elementType: "labels.text.fill", stylers: [{ color: "#7b7b7b" }] }, { featureType: "road", elementType: "labels.text.stroke", stylers: [{ color: "#ffffff" }] }, { featureType: "road.highway", elementType: "all", stylers: [{ visibility: "simplified" }] }, { featureType: "road.arterial", elementType: "labels.icon", stylers: [{ visibility: "off" }] }, { featureType: "transit", elementType: "all", stylers: [{ visibility: "off" }] }, { featureType: "water", elementType: "all", stylers: [{ color: "#46bcec" }, { visibility: "on" }] }, { featureType: "water", elementType: "geometry.fill", stylers: [{ color: "#b0ddd9" }] }, { featureType: "water", elementType: "labels.text.fill", stylers: [{ color: "#070707" }] }, { featureType: "water", elementType: "labels.text.stroke", stylers: [{ color: "#ffffff" }] }] }); new google.maps.Marker({ position: i, map: s, icon: "../Content/images/marker.png", title: a }) } function MultipleMarkerMap() { var e = new google.maps.Map(document.getElementById("map"), { zoom: 8, center: { lat: 9.8, lng: 76.59 }, disableDefaultUI: !0, styles: [{ featureType: "all", elementType: "geometry.fill", stylers: [{ weight: "2.00" }] }, { featureType: "all", elementType: "geometry.stroke", stylers: [{ color: "#9c9c9c" }] }, { featureType: "all", elementType: "labels.text", stylers: [{ visibility: "on" }] }, { featureType: "landscape", elementType: "all", stylers: [{ color: "#f2f2f2" }] }, { featureType: "landscape", elementType: "geometry.fill", stylers: [{ color: "#ffffff" }] }, { featureType: "landscape.man_made", elementType: "geometry.fill", stylers: [{ color: "#ffffff" }] }, { featureType: "poi", elementType: "all", stylers: [{ visibility: "off" }] }, { featureType: "road", elementType: "all", stylers: [{ saturation: -100 }, { lightness: 45 }] }, { featureType: "road", elementType: "geometry.fill", stylers: [{ color: "#eeeeee" }] }, { featureType: "road", elementType: "labels.text.fill", stylers: [{ color: "#7b7b7b" }] }, { featureType: "road", elementType: "labels.text.stroke", stylers: [{ color: "#ffffff" }] }, { featureType: "road.highway", elementType: "all", stylers: [{ visibility: "simplified" }] }, { featureType: "road.arterial", elementType: "labels.icon", stylers: [{ visibility: "off" }] }, { featureType: "transit", elementType: "all", stylers: [{ visibility: "off" }] }, { featureType: "water", elementType: "all", stylers: [{ color: "#46bcec" }, { visibility: "on" }] }, { featureType: "water", elementType: "geometry.fill", stylers: [{ color: "#b0ddd9" }] }, { featureType: "water", elementType: "labels.text.fill", stylers: [{ color: "#070707" }] }, { featureType: "water", elementType: "labels.text.stroke", stylers: [{ color: "#ffffff" }] }] }), t = [["Bismi Appliances Kaloor", 9.9900316, 76.294585], ["Bismi HyperMart,Kaloor", 9.9977559, 76.3021843], ["Bismi Appliances  Perumbavoor", 10.1129652, 76.4784127], ["Bismi Appliances Tripunithura", 9.9507033, 76.333467], ["Bismi Appliances Muvattupuzha", 9.9789115, 76.5872023], ["Bismi Appliances Kottayam", 9.6006487, 76.5314987], ["Bismi Appliances Kollam", 8.8758823, 76.6224677], ["Bismi Appliances Kalamassery", 10.0514224, 76.3192696], ["Bismi Appliances Thodupuzha", 9.8936544, 76.7069712], ["Bismi Appliances Angamaly", 10.1867566, 76.3812593], ["Bismi HyperMart Alappuzha", 9.4949448, 76.3304758], ["Bismi Appliances & HyperMart Thrissur", 10.5355233, 76.2136901], ["Bismi Appliances & HyperMart Calicut", 11.2731864, 75.7744125]]; for (i = 0; i < t.length; i++) new google.maps.Marker({ position: new google.maps.LatLng(t[i][1], t[i][2]), map: e, icon: "../Content/images/marker1.png", title: t[i][0] }) } $("header").find(".mnu").click(function () { $(this).hasClass("opn") ? ($(this).removeClass("opn"), $("header").find(".menu-wrap").slideUp()) : ($(this).addClass("opn"), $("header").find(".menu-wrap").slideDown()) }), $(".hassub-btn").click(function () { $(this).hasClass("hme") && ($(this).hasClass("opn") ? ($(this).removeClass("opn"), $(this).closest(".hassub").find(".submnu").slideUp()) : ($(this).addClass("opn"), $(this).closest(".hassub").find(".submnu").slideDown())) }), $(".connect-tabbtn-wrap").find(".tab-btn").click(function () { var e = $(this).data("id"); $(".connect-tabbtn-wrap").find(".tab-btn").removeClass("active"), $(this).addClass("active"), $(".connect-tab-pane-itm").hide(), $("#connect-tab-item-" + e).fadeIn() }), $(".field-wrap").find("input, textarea").each(function () { "" != $(this).val() && ($(this).closest(".field-wrap").find("label").hasClass("top") || $(this).closest(".field-wrap").find("label").addClass("top")) }), $(".field-wrap").find("select").each(function () { 0 != $(this).find(":selected").index() && ($(this).find("option")[0].remove(), $(this).closest(".field-wrap").find("label").addClass("top")) }), $(".field-wrap").find("input, textarea").on("keypress keyup blur", function () { "" != $(this).val() ? $(this).closest(".field-wrap").find("label").hasClass("top") || $(this).closest(".field-wrap").find("label").addClass("top") : $(this).closest(".field-wrap").find("label").removeClass("top") }), $(".field-wrap").find("select").on("change", function () { $(this).closest(".field-wrap").find("label").hasClass("top") || ($(this).find("option")[0].remove(), $(this).closest(".field-wrap").find("label").addClass("top")) }), $(".file-uploader").find(".file-hldr").on("change", function () { $(this).closest(".file-uploader").find(".title").html("" == $(this).val() ? "Upload Your Resume" : $(this)[0].files[0].name) });